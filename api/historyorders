import mysql from 'mysql2/promise';
import jwt from 'jsonwebtoken';

export default async function handler(req, res) {
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');

  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  if (req.method !== 'GET') {
    return res.status(405).json({ message: 'Method Not Allowed' });
  }

  const authHeader = req.headers.authorization;
  if (!authHeader || !authHeader.startsWith('Bearer ')) {
    return res.status(401).json({ message: '未授权访问' });
  }

  const token = authHeader.split(' ')[1];
  let decoded;

  try {
    // 这里写死密钥 '0d000721'
    decoded = jwt.verify(token, '0d000721');
  } catch (err) {
    return res.status(401).json({ message: '无效 Token' });
  }

  const account = decoded.account;

  try {
    const connection = await mysql.createConnection({
      host: process.env.DB_HOST,
      user: process.env.DB_USER,
      password: process.env.DB_PASSWORD,
      database: 'test999'
    });

    const [rows] = await connection.execute(
      'SELECT id, timestamp, account, items FROM orders WHERE account = ?',
      [account]
    );

    const mappedRows = rows.map(row => ({
      id: row.id,
      订单时间: row.timestamp,
      account: row.account,
      交易名称: row.items
    }));

    res.status(200).json({ message: '查询成功', data: mappedRows });
    await connection.end();
  } catch (error) {
    res.status(500).json({ message: '查询失败', error: error.message });
  }
}
